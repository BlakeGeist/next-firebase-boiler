{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n  failedToFind: false,\n  userName: '',\n  profiles: [],\n  rawProfiles: [],\n  hasSearched: false,\n  user: {},\n  messages: [],\n  card: {},\n  isLoading: false,\n  usersCardCollction: [],\n  modalIsOpen: false,\n  modalCard: {},\n  modalCardDescription: '',\n  lang: 'en',\n  strings: [],\n  pageStrings: [],\n  isLoggedIn: false\n};\nexport const actionTypes = {\n  TICK: 'TICK',\n  INCREMENT: 'INCREMENT',\n  DECREMENT: 'DECREMENT',\n  RESET: 'RESET',\n  SET_ITEM: 'SET_ITEM',\n  ADD_PROFILE: 'ADD_PROFILE',\n  REMOVE_PROFILE: 'REMOVE_PROFILE'\n}; // REDUCERS\n\nexport const reducer = (state = exampleInitialState, action) => {\n  function removeProfileByIndex(index) {\n    return state.profiles.filter(ele => {\n      return ele !== state.profiles[index];\n    });\n  } // this seems like an odd spot to be declaring this function\n\n\n  function updateProfiles(profileDoesNotExist, profiles, state) {\n    if (profileDoesNotExist) {\n      return _objectSpread({}, state, {\n        profiles,\n        rawProfiles: profiles\n      });\n    } else {\n      return state;\n    }\n  }\n\n  switch (action.type) {\n    case actionTypes.SET_ITEM:\n      {\n        return _Object$assign({}, state, {\n          [action.name]: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n}; // ACTIONS\n\nexport const serverRenderClock = () => {\n  return {\n    type: actionTypes.TICK,\n    light: false,\n    ts: _Date$now()\n  };\n};\nexport const startClock = () => {\n  return {\n    type: actionTypes.TICK,\n    light: true,\n    ts: _Date$now()\n  };\n};\nexport const incrementCount = () => {\n  return {\n    type: actionTypes.INCREMENT\n  };\n};\nexport const decrementCount = () => {\n  return {\n    type: actionTypes.DECREMENT\n  };\n};\nexport const resetCount = () => {\n  return {\n    type: actionTypes.RESET\n  };\n};\nexport function initializeStore(initialState = exampleInitialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware()));\n}","map":null,"metadata":{},"sourceType":"module"}