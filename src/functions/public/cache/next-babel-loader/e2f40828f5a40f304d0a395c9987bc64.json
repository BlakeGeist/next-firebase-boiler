{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport clientCredentials from '../../../credentials/client';\nimport Layout from '../../../layouts/Layout';\nimport Router from 'next/router';\nimport { compose, withState } from 'recompose';\nimport AuthForm from '../../../components/AuthForm';\nimport LoadingSpinner from '../../../components/LoadingSpinner';\n\nvar SignUpBase = function SignUpBase(_ref) {\n  var setState = _ref.setState,\n      state = _ref.state,\n      lang = _ref.lang;\n  var email = state.email,\n      password = state.password,\n      isLoading = state.isLoading,\n      errorMessage = state.errorMessage;\n\n  var handleChange = function handleChange(event) {\n    var tempObj = _objectSpread({}, state);\n\n    tempObj[event.target.name] = event.target.value;\n    setState(tempObj);\n  };\n\n  function updateState(item, payload) {\n    var tempObj = _objectSpread({}, state);\n\n    tempObj[item] = payload;\n    setState(tempObj);\n  }\n\n  var handleEmailPassAuth = function handleEmailPassAuth(e) {\n    e.preventDefault();\n    updateState('isLoading', true);\n    updateState('errorMessage', '');\n    var email = state.email,\n        password = state.password;\n    firebase.auth().createUserWithEmailAndPassword(email, password)[\"catch\"](function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n\n      if (errorCode === 'auth/email-already-in-use') {\n        errorMessage = 'email already in use, please sign in or use another email';\n      }\n\n      updateState('errorMessage', errorMessage);\n    });\n  };\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(clientCredentials);\n  }\n\n  ;\n\n  var onAuthStateChange = function onAuthStateChange(user) {\n    if (user && user.uid) {\n      Router.push(\"/\".concat(lang, \"/dashboard\"));\n    }\n  };\n\n  useEffect(function () {\n    var unsubscribe = firebase.auth().onAuthStateChanged(onAuthStateChange);\n    return function () {\n      return unsubscribe();\n    };\n  });\n  return __jsx(Layout, {\n    pageMod: \"about\"\n  }, __jsx(\"h1\", {\n    className: \"jsx-1950101003\"\n  }, \"Sign Up page\"), __jsx(\"p\", {\n    className: \"jsx-1950101003\"\n  }, \"Sign Up page content\"), __jsx(\"div\", {\n    className: \"jsx-1950101003\" + \" \" + \"login-form-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1950101003\" + \" \" + \"login-form\"\n  }, __jsx(AuthForm, {\n    errorMessage: errorMessage,\n    email: email,\n    password: password,\n    handleEmailPassAuth: handleEmailPassAuth,\n    handleChange: handleChange\n  }), __jsx(\"button\", {\n    className: \"jsx-1950101003\"\n  }, \"Sign Up with Google\")), __jsx(LoadingSpinner, {\n    isLoading: isLoading\n  })), __jsx(_JSXStyle, {\n    id: \"1950101003\"\n  }, [\".login-form-wrapper.jsx-1950101003{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:50px;}\"]));\n};\n\nvar SignUp = compose(withState('state', 'setState', {\n  email: '',\n  password: '',\n  isLoading: false,\n  errorMessage: ''\n}))(SignUpBase);\nexport default SignUp;","map":null,"metadata":{},"sourceType":"module"}