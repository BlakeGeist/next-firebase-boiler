{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, Field } from 'formik';\nimport { connect } from 'react-redux';\nimport { translate } from '../../../helpers/quickHelpers';\n\nconst ContactForm = ({\n  strings,\n  pageStrings,\n  lang\n}) => {\n  return __jsx(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      message: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.name) {\n        errors.name = 'Required';\n      } else if (!values.email) {\n        errors.email = 'Required';\n      } else if (!values.message) {\n        errors.message = 'Required';\n      }\n\n      return errors;\n    },\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      console.log(values);\n      setSubmitting(false);\n    }\n  }, ({\n    errors,\n    touched,\n    handleSubmit,\n    isSubmitting\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"label\", null, __jsx(\"div\", null, translate('NAME', pageStrings, lang)), __jsx(Field, {\n    name: \"name\",\n    className: \"form-input\"\n  }), errors.name && touched.name && errors.name), __jsx(\"label\", null, __jsx(\"div\", null, translate('EMAIL', pageStrings, lang)), __jsx(Field, {\n    name: \"email\",\n    className: \"form-input\"\n  }), errors.email && touched.email && errors.email), __jsx(\"label\", null, __jsx(\"div\", null, translate('MESSAGE', pageStrings, lang)), __jsx(Field, {\n    name: \"message\",\n    as: \"textarea\",\n    className: \"form-input\"\n  }), errors.message && touched.message && errors.message), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting\n  }, translate('SUBMIT', strings, lang))));\n};\n\nexport default connect(state => state)(ContactForm);","map":null,"metadata":{},"sourceType":"module"}