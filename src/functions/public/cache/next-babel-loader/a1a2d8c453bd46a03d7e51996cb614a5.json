{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport clientCredentials from '../../..//credentials/client';\nimport Layout from '../../../layouts/Layout';\nimport Router from 'next/router';\nimport { compose, withState } from 'recompose';\nimport AuthForm from '../../../components/AuthForm';\nimport LoadingSpinner from '../../../components/LoadingSpinner';\nimport { connect } from 'react-redux';\n\nconst LoginBase = ({\n  setState,\n  state,\n  dispatch,\n  lang\n}) => {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(clientCredentials);\n  }\n\n  ;\n  const {\n    email,\n    password,\n    isLoading,\n    errorMessage\n  } = state;\n\n  const handleChange = event => {\n    let tempObj = _objectSpread({}, state);\n\n    tempObj[event.target.name] = event.target.value;\n    setState(tempObj);\n  };\n\n  function updateState(item, payload) {\n    let tempObj = _objectSpread({}, state);\n\n    tempObj[item] = payload;\n    setState(tempObj);\n  }\n\n  const handleEmailPassAuth = e => {\n    e.preventDefault();\n    updateState('isLoading', true);\n    const {\n      email,\n      password\n    } = state;\n    firebase.auth().signInWithEmailAndPassword(email, password).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      updateState('isLoading', false);\n\n      if (errorCode === 'auth/user-not-found') {\n        errorMessage = 'User not found please register';\n      }\n\n      updateState('errorMessage', errorMessage);\n    });\n  };\n\n  const onAuthStateChange = async user => {\n    if (user && user.uid) {\n      dispatch({\n        type: 'SET_ITEM',\n        name: 'user',\n        payload: user\n      });\n      Router.push(`/${lang}/dashboard`);\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(onAuthStateChange);\n    return () => unsubscribe();\n  });\n  return __jsx(Layout, {\n    pageMod: \"about\"\n  }, __jsx(\"h1\", {\n    className: \"jsx-2762284588\"\n  }, \"Login page\"), __jsx(\"p\", {\n    className: \"jsx-2762284588\"\n  }, \"Login page content\"), __jsx(\"div\", {\n    className: \"jsx-2762284588\" + \" \" + \"login-form-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"jsx-2762284588\" + \" \" + \"login-form\"\n  }, __jsx(AuthForm, {\n    errorMessage: errorMessage,\n    email: email,\n    password: password,\n    handleEmailPassAuth: handleEmailPassAuth,\n    handleChange: handleChange\n  }), __jsx(\"div\", {\n    className: \"jsx-2762284588\"\n  }, __jsx(\"button\", {\n    className: \"jsx-2762284588\"\n  }, \"Sign In with Google\"))), __jsx(LoadingSpinner, {\n    isLoading: isLoading\n  })), __jsx(_JSXStyle, {\n    id: \"2762284588\"\n  }, [\".login-form-wrapper.jsx-2762284588{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:50px;position:relative;}\"]));\n};\n\nconst Login = compose(withState('state', 'setState', {\n  email: '',\n  password: '',\n  isLoading: false,\n  errorMessage: ''\n}))(LoginBase);\nexport default connect(state => state)(Login);","map":null,"metadata":{},"sourceType":"module"}