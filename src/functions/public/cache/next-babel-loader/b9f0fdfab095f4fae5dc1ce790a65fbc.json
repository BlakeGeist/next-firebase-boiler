{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { translate } from '../../../../../helpers/quickHelpers';\n\nconst Form = ({\n  strings,\n  pageStrings,\n  lang\n}) => {\n  const convertToSlug = text => {\n    return text.toUpperCase().replace(/[^\\w ]+/g, '').replace(/ +/g, '-');\n  };\n\n  return __jsx(Formik, {\n    initialValues: {\n      string_name: '',\n      string_value: '',\n      string_scope: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.string_name) {\n        errors.string_name = 'Required';\n      } else if (!values.string_value) {\n        errors.string_value = 'Required';\n      } else if (!values.string_scope) {\n        errors.string_scope = 'Required';\n      }\n\n      return errors;\n    },\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      const formData = _JSON$stringify(values, null, 2);\n\n      const response = axios.post('/api/translate', {\n        text: values.string_name,\n        slug: values.string_value,\n        scope: values.string_scope\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setSubmitting(false);\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"label\", null, __jsx(\"div\", null, translate('STRING-NAME', pageStrings, lang)), __jsx(\"input\", {\n    type: \"text\",\n    name: \"string_name\",\n    onChange: e => {\n      setFieldValue('string_value', convertToSlug(e.target.value), true);\n      handleChange(e);\n    },\n    onBlur: handleBlur,\n    value: values.string_name\n  }), errors.string_name && touched.string_name && errors.string_name), __jsx(\"label\", null, __jsx(\"div\", null, translate('STRING-VALUE', pageStrings, lang)), __jsx(\"input\", {\n    type: \"text\",\n    name: \"string_value\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.string_value\n  }), errors.string_value && touched.string_value && errors.string_value), __jsx(\"label\", null, __jsx(\"div\", null, translate('STRING-SCOPE', pageStrings, lang)), __jsx(\"input\", {\n    type: \"text\",\n    name: \"string_scope\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.string_scope\n  }), errors.string_scope && touched.string_scope && errors.string_scope), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting\n  }, translate('SUBMIT', strings, lang))));\n};\n\nexport default connect(state => state)(Form);","map":null,"metadata":{},"sourceType":"module"}