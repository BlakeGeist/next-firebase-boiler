{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, Field } from 'formik';\nimport { connect } from 'react-redux';\nimport { translate } from '../../../helpers/quickHelpers';\n\nvar ContactForm = function ContactForm(_ref) {\n  var strings = _ref.strings,\n      pageStrings = _ref.pageStrings,\n      lang = _ref.lang;\n  return __jsx(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      message: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.name) {\n        errors.name = 'Required';\n      } else if (!values.email) {\n        errors.email = 'Required';\n      } else if (!values.message) {\n        errors.message = 'Required';\n      }\n\n      return errors;\n    },\n    onSubmit:\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var setSubmitting;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = _ref2.setSubmitting;\n                console.log(values);\n                setSubmitting(false);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  }, function (_ref4) {\n    var errors = _ref4.errors,\n        touched = _ref4.touched,\n        handleSubmit = _ref4.handleSubmit,\n        isSubmitting = _ref4.isSubmitting;\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit\n    }, __jsx(\"label\", null, __jsx(\"div\", null, translate('NAME', pageStrings, lang)), __jsx(Field, {\n      name: \"name\",\n      className: \"form-input\"\n    }), errors.name && touched.name && errors.name), __jsx(\"label\", null, __jsx(\"div\", null, translate('EMAIL', pageStrings, lang)), __jsx(Field, {\n      name: \"email\",\n      className: \"form-input\"\n    }), errors.email && touched.email && errors.email), __jsx(\"label\", null, __jsx(\"div\", null, translate('MESSAGE', pageStrings, lang)), __jsx(Field, {\n      name: \"message\",\n      as: \"textarea\",\n      className: \"form-input\"\n    }), errors.message && touched.message && errors.message), __jsx(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting\n    }, translate('SUBMIT', strings, lang)));\n  });\n};\n\nexport default connect(function (state) {\n  return state;\n})(ContactForm);","map":null,"metadata":{},"sourceType":"module"}